name: Build and Push Docker Images

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-push:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target: [dev]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Extract version and configure tagging
        id: extract_version
        run: |
          case "${{ matrix.target }}" in
            dev)
              CONFIG_FILE="Omada Dev/config.yaml"
              IMAGE_NAME="${{ secrets.DOCKER_USER_NAME }}/home-assistant-omada-dev"
              ;;
            beta)
              CONFIG_FILE="Omada Beta/config.yaml"
              IMAGE_NAME="${{ secrets.DOCKER_USER_NAME }}/home-assistant-omada-beta"
              ;;
            stable)
              CONFIG_FILE="Omada Stable/config.yaml"
              IMAGE_NAME="${{ secrets.DOCKER_USER_NAME }}/home-assistant-omada-stable"
              ;;
          esac

          VERSION=$(yq '.version' "${CONFIG_FILE}")
          DOCKER_TAG="${VERSION}-pr"

          echo "CONFIG_FILE=$CONFIG_FILE" >> $GITHUB_ENV
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Log Configuration
        run: |
          echo "Target: ${{ matrix.target }}"
          echo "Docker Tag: ${{ env.DOCKER_TAG }}"
          echo "Docker Image: ${{ env.IMAGE_NAME }}"
          echo "Config File: ${{ env.CONFIG_FILE }}"
          echo "Version: ${{ env.VERSION }}"

      - name: Build and push Docker image for release builds
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}
          platforms: linux/amd64,linux/arm64
          file: ./Omada Dev/Dockerfile
          context: ./Omada Dev
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:cache,mode=max
          build-args: |
            INSTALL_VER=${{ env.VERSION }}
