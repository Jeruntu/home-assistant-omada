name: Retag and Push Docker Images for Master

on:
  push:
    branches:
      - master

jobs:
  retag-and-push:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target: [dev]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 2 # Fetch the last two commits for comparison

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Extract version from current and previous commits
        id: extract_versions
        run: |
          case "${{ matrix.target }}" in
            dev)
              CONFIG_FILE="Omada Dev/config.yaml"
              IMAGE_NAME="${{ secrets.DOCKER_USER_NAME }}/home-assistant-omada-dev"
              ;;
            beta)
              CONFIG_FILE="Omada Beta/config.yaml"
              IMAGE_NAME="${{ secrets.DOCKER_USER_NAME }}/home-assistant-omada-beta"
              ;;
            stable)
              CONFIG_FILE="Omada Stable/config.yaml"
              IMAGE_NAME="${{ secrets.DOCKER_USER_NAME }}/home-assistant-omada-stable"
              ;;
          esac

          # Extract version from the current commit
          CURRENT_VERSION=$(yq '.version' $CONFIG_FILE)

          # Extract version from the previous commit
          PREVIOUS_VERSION=$(git show HEAD~1:$CONFIG_FILE | yq '.version')

          # Export variables
          echo "CONFIG_FILE=$CONFIG_FILE" >> $GITHUB_ENV
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "PREVIOUS_VERSION=$PREVIOUS_VERSION" >> $GITHUB_ENV

      - name: Log Versions
        run: |
          echo "Target: ${{ matrix.target }}"
          echo "Docker Image: ${{ env.IMAGE_NAME }}"
          echo "Config File: ${{ env.CONFIG_FILE }}"
          echo "Current Version: ${{ env.CURRENT_VERSION }}"
          echo "Previous Version: ${{ env.PREVIOUS_VERSION }}"

      - name: Conditional Retagging
        if: env.CURRENT_VERSION != env.PREVIOUS_VERSION
        run: |
          PR_TAG="${{ env.CURRENT_VERSION }}-pr"
          FINAL_TAG="${{ env.CURRENT_VERSION }}"

          # Pull the PR-tagged image
          docker pull ${{ env.IMAGE_NAME }}:$PR_TAG

          # Retag and push the image without the `-pr` suffix
          docker tag ${{ env.IMAGE_NAME }}:$PR_TAG ${{ env.IMAGE_NAME }}:$FINAL_TAG
          docker push ${{ env.IMAGE_NAME }}:$FINAL_TAG
